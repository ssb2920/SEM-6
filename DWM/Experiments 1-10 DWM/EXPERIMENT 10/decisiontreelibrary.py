# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/sihaanssr/semVI/blob/master/DWH/Expt10/DecisionTree.ipynb
"""

#Before running the cells ensure that you have graphviz and pydotplus

!git clone https://github.com/sihaanssr/semVI.git

!pip install graphviz pydotplus

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics

cd semVI/DWH/Expt10/

col_names = ['pregnant', 'glucose', 'bp', 'skin', 'insulin', 'bmi', 'pedigree', 'age', 'label']
#load the dataset
pima = pd.read_csv('diabetes.csv',header=None,names=col_names)
pima = pima.drop(pima.index[0])

pima.head()

feature_cols = ['pregnant', 'insulin', 'bmi', 'age','glucose','bp','pedigree']
X = pima[feature_cols]
y = pima.label

#Split into 70% train and 30% test
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.3,random_state=1)

#Creating the model
model = DecisionTreeClassifier()

#Training the model
model = model.fit(X_train,y_train)

#Predict responses for the test set
predictions = model.predict(X_test)

#Accuracy Score
print("Accuracy score = {}".format(metrics.accuracy_score(y_test,predictions)))

from sklearn.tree import export_graphviz
from sklearn.externals.six import StringIO
from IPython.display import Image
import pydotplus

dot_data = StringIO()
export_graphviz(model, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True,feature_names = feature_cols,class_names=['0','1'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('diabetes.png')
Image(graph.create_png())

# Create Decision Tree classifer object
clf = DecisionTreeClassifier(criterion="entropy", max_depth=3)

# Train Decision Tree Classifer
clf = clf.fit(X_train,y_train)

#Predict the response for test dataset
y_pred = clf.predict(X_test)

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

from sklearn.externals.six import StringIO  
from IPython.display import Image  
from sklearn.tree import export_graphviz
import pydotplus
dot_data = StringIO()
export_graphviz(clf, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True, feature_names = feature_cols,class_names=['0','1'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('diabetes.png')
Image(graph.create_png())